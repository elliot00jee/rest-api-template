plugins {
	id 'org.springframework.boot' version '2.6.6'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	// Apply the Asciidoctor plugin.
	id "org.asciidoctor.jvm.convert" version "3.3.2"
}

group = 'elliot'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	// Declare the asciidoctorExt configuration for dependencies that extend Asciidoctor.
	asciidoctorExt
}

processResources {
	filesMatching('**/application-*.yml') {
		expand(project.properties)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	// lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'
	// Modelmapper mapper
	implementation group: 'org.modelmapper', name: 'modelmapper', version: '3.0.0'
	// Mapstruct mapper
	implementation 'org.mapstruct:mapstruct:1.4.2.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.4.2.Final'
	annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	// 	Add a dependency on spring-restdocs-asciidoctor in the asciidoctorExt configuration.
	// 	This will automatically configure the snippets attribute for use in your .adoc files to point to build/generated-snippets.
	// 	It will also allow you to use the operation block macro.
	asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor'
	// Add a dependency on spring-restdocs-mockmvc in the testImplementation configuration.
	// If you want to use WebTestClient or REST Assured rather than MockMvc,
	// add a dependency on spring-restdocs-webtestclient or spring-restdocs-restassured respectively instead.
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
}

// Configure a property to define the output location for generated snippets.
ext {
	snippetsDir = file('build/generated-snippets')
}

test {
	// Configure the test task to add the snippets directory as an output.
	outputs.dir snippetsDir
	useJUnitPlatform()
}

asciidoctor {
	// Configure the asciidoctor task.
	// Configure the snippets directory as an input.
	inputs.dir snippetsDir
	// Configure the use of the asciidoctorExt configuration for extensions.
	configurations 'asciidoctorExt'
	// Make the task depend on the test task so that the tests are run before the documentation is created.
	dependsOn test
}

// static/docs 폴더 비우기
// 출처 : https://backtony.github.io/spring/2021-10-15-spring-test-3/
asciidoctor.doFirst {
	delete file('src/main/resources/static/docs')
}

// asccidoctor 작업 이후 생성된 HTML 파일을 static/docs 로 copy
task copyDocument(type: Copy) {
	dependsOn asciidoctor
	from file("build/docs/asciidoc")
	into file("src/main/resources/static/docs")
}

// build 의 의존작업 명시
build {
	dependsOn copyDocument
}

bootJar {
	// 	Ensure that the documentation has been generated before the jar is built.
	dependsOn asciidoctor
	// Copy the generated documentation into the jar’s static/docs directory.
	from ("${asciidoctor.outputDir}/html5") {
		into 'static/docs'
	}
}